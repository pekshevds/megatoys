///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


Процедура ЗаполнитьПоОстаткамВнутреннихЗаявок()Экспорт
	
	Если ЭтоНовый() Тогда
	
		ДатаСреза = ТекущаяДатаСеанса();		
	Иначе
		
		ДатаСреза = ЭтотОбъект.Дата
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗавкиВнутренниеОстатки.Номенклатура,
		|	ЗавкиВнутренниеОстатки.КоличествоОстаток КАК Количество,
		|	ЗавкиВнутренниеОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрНакопления.mega_ЗавкиВнутренние.Остатки(&ДатаСреза,) КАК ЗавкиВнутренниеОстатки";
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Состав.Добавить(), ВыборкаДетальныеЗаписи);
	КонецЦикла;			
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ                             	
	|	Состав.НомерСтроки КАК НомерСтроки,
	|	&ВидДвижения КАК ВидДвижения,
	|	Состав.Ссылка.Дата КАК Период,
	|	Состав.Ссылка КАК ДокументПотребности,
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Состав.Количество КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения
	|ИЗ
	|	Документ.mega_ЗаявкаПоставщику.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
    		
	РегистрыНакопления.mega_ЗавкиПоставщикам.ВыполнитьДвижение(ЭтотОбъект.Ссылка, Выборка);
	
		
	Результаты = ПолучитьВыборкиДанныхДляДвиженийПоЗаявкамВнутреннимКРазмещению();
	ВыборкаСостав = Результаты[0].Выбрать();
	ВыборкаЗавкиВнутренниеКРазмещению = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыполнитьДвиженияПоЗавкамВнутреннимКРазмещению(ВыборкаСостав, ВыборкаЗавкиВнутренниеКРазмещению); 
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьВыборкиДанныхДляДвиженийПоЗаявкамВнутреннимКРазмещению()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Состав.Номенклатура КАК Номенклатура,
	|	Состав.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(Состав.Количество) КАК Количество,
	|	Состав.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаХранения
	|ИЗ
	|	Документ.mega_ЗаявкаПоставщику.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &СсылкаНаОбъект
	|СГРУППИРОВАТЬ ПО
	|	Состав.Номенклатура,
	|	Состав.ЕдиницаИзмерения,
	|	Состав.Номенклатура.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗавкиВнутренниеКРазмещению.Номенклатура КАК Номенклатура,
	|	ЗавкиВнутренниеКРазмещению.ДокументПотребности КАК ДокументПотребности,
	|	ЗавкиВнутренниеКРазмещению.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.mega_ЗавкиВнутренниеКРазмещению.Остатки(, Номенклатура В
	|		(ВЫБРАТЬ
	|			mega_ЗаявкаПоставщикуСостав.Номенклатура
	|		ИЗ
	|			Документ.mega_ЗаявкаПоставщику.Состав КАК mega_ЗаявкаПоставщикуСостав
	|		ГДЕ
	|			mega_ЗаявкаПоставщикуСостав.Ссылка = &СсылкаНаОбъект)) КАК ЗавкиВнутренниеКРазмещению
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗавкиВнутренниеКРазмещению.ДокументПотребности.Дата
	|АВТОУПОРЯДОЧИВАНИЕ
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Номенклатура,
	|	ДокументПотребности";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", ЭтотОбъект.Ссылка);
	
	
	Результаты = Запрос.ВыполнитьПакет();
	Возврат Результаты;
КонецФункции

Процедура ВыполнитьДвиженияПоЗавкамВнутреннимКРазмещению(ВыборкаСостав, ВыборкаЗавкиВнутренниеКразмещению)
	Движения.mega_ЗавкиВнутренниеКРазмещению.Записывать = Истина;
	
	Пока ВыборкаСостав.Следующий() Цикл
		
		КоличествоСписать = Справочники.mega_ЕдиницыИзмерения.ПеревестиИзЕдиницыВЕдиницу(
			ВыборкаСостав.Количество, ВыборкаСостав.ЕдиницаИзмерения, ВыборкаСостав.ЕдиницаХранения);
						
		ВыборкаЗавкиВнутренниеКразмещению.Сбросить();
		СтруктураПоиска = Новый Структура("Номенклатура", ВыборкаСостав.Номенклатура);
		Если ВыборкаЗавкиВнутренниеКразмещению.НайтиСледующий(СтруктураПоиска) Тогда
			ВыборкаДокументы = ВыборкаЗавкиВнутренниеКразмещению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() И КоличествоСписать > 0 Цикл
				
				Количество = КоличествоСписать;								
				Если КоличествоСписать > ВыборкаДокументы.Количество Тогда
					
					Количество = ВыборкаДокументы.Количество;
					КоличествоСписать = КоличествоСписать - ВыборкаДокументы.Количество;
				Иначе
					  				
					 КоличествоСписать = 0;
				КонецЕсли;
				
				НоваяСтрока = Движения.mega_ЗавкиВнутренниеКРазмещению.Добавить();
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				НоваяСтрока.Период = ЭтотОбъект.Дата;
				НоваяСтрока.Регистратор = ЭтотОбъект.Ссылка;
				НоваяСтрока.ДокументПотребности = ВыборкаДокументы.ДокументПотребности;
				НоваяСтрока.Номенклатура = ВыборкаДокументы.Номенклатура;
				НоваяСтрока.Количество = Количество;				
			КонецЦикла;
		КонецЕсли;	                                             	
	КонецЦикла;	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли