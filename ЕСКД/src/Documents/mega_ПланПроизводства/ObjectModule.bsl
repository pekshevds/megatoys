///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Перем ТаблицаОстатковПроизводственныхРесурсов;
Перем ДатаНачалаПланирования;

#Область ПрограммныйИнтерфейс


#Область ДляВызоваИзДругихПодсистем

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
    	
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ИнициализироватьТаблицуОстатковПроизводственныхРесурсов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственныеРесурсы.Ресурс КАК Ресурс,
	|	ПроизводственныеРесурсы.ДатаРесурса КАК ДатаРесурса,
	|	ПроизводственныеРесурсы.ВремяОстаток КАК Остаток
	|ИЗ
	|	РегистрНакопления.mega_ПроизводственныеРесурсы.Остатки(, ДатаРесурса >= &ДатаНачалаПланирования) КАК ПроизводственныеРесурсы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ресурс,
	|	ДатаРесурса";
	
	Запрос.УстановитьПараметр("ДатаНачалаПланирования", ДатаНачалаПланирования);
	
	Результат = Запрос.Выполнить();
	ТаблицаОстатковПроизводственныхРесурсов = Результат.Выгрузить();
	ТаблицаОстатковПроизводственныхРесурсов.Индексы.Добавить("Ресурс");
	ТаблицаОстатковПроизводственныхРесурсов.Индексы.Добавить("ДатаРесурса");	
КонецПроцедуры

Функция ПолучитьОперацииСпецификации(Спецификация, Количество = 1)Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ                                             
	|	СтадииОбработки.НомерСтроки КАК НомерСтроки,
	|	СтадииОбработки.ВидСтадииОбработки КАК ВидСтадииОбработки,
	|	СтадииОбработки.Количество КАК НормаПроизводства,	
	|	ТехнологическиеОперации.Номенклатура КАК ТехнологическаяОперация,
	|	ТехнологическиеОперации.Номенклатура.ПроизводственныйРесурс КАК ПроизводственныйРесурс,	
	|	ТехнологическиеОперации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	&Количество КАК Количество,
	|	ТехнологическиеОперации.ВремяВыполнения / ТехнологическиеОперации.Ссылка.Количество КАК ВремяВыполненияЕдиницы,
	|	ТехнологическиеОперации.ВремяВыполнения / ТехнологическиеОперации.Ссылка.Количество * &Количество КАК ВремяВыполнения,
	|	СтадииОбработки.Ссылка КАК Спецификация
	|ИЗ
	|	Справочник.mega_Спецификации.ТехнологическиеОперации КАК ТехнологическиеОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.mega_Спецификации.СтадииОбработки КАК СтадииОбработки
	|		ПО ТехнологическиеОперации.Ссылка = СтадииОбработки.Ссылка
	|			И ТехнологическиеОперации.КлючСвязи = СтадииОбработки.КлючСвязи
	|ГДЕ
	|	ТехнологическиеОперации.Ссылка = &Спецификация
	|	И ТехнологическиеОперации.Номенклатура.ПроизводственныйРесурс <> ЗНАЧЕНИЕ(Справочник.mega_ПроизводственныеРесурсы.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
		
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("Количество", Количество);
	РезультатЗапроса = Запрос.Выполнить();
				
	Возврат РезультатЗапроса.Выгрузить();
КонецФункции

Функция ПолучитьОстаткиПроизводственногоРесурса(ПроизводственныйРесурс)
	ТаблицаОстатковПроизводственныхРесурсов.НайтиСтроки(Новый Структура(""));
КонецФункции

Процедура СоздатьПроводки(ОперацииСпецификации)
	
	Для Каждого Выборка Из ОперацииСпецификации Цикл 
		
		Время = Выборка.ВремяВыполненияЕдиницы * Выборка.НормаПроизводства;
		
		Пока Время <> 0 Цикл
		КонецЦикла;	
		Движение = Движения.mega_ПроизводственныеРесурсы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ДатаРесурса = ДатаНачалаПланирования;
		Движение.Ресурс = Выборка.ПроизводственныйРесурс;			
		Движение.Время = Время;		
		Движение.Спецификация = Выборка.Спецификация;
		Движение.ВидСтадииОбработки = Выборка.ВидСтадииОбработки;
		Движение.ТехнологическаяОперация = Выборка.ТехнологическаяОперация;
		
		Выборка.ВремяВыполнения = Выборка.ВремяВыполнения - Время;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
			
	Движения.mega_ПроизводственныеРесурсы.Записывать = Истина;
	ОсвободитьРанееЗанятыеРесурсы();
	
	ДатаНачалаПланирования = НачалоДня(ТекущаяДатаСеанса());
	ИнициализироватьТаблицуОстатковПроизводственныхРесурсов();
	
	Для Каждого ТекСтрокаСостав Из Состав Цикл 
		
		ОперацииСпецификации = ПолучитьОперацииСпецификации(ТекСтрокаСостав.Спецификация, ТекСтрокаСостав.Количество);		
		ВремяВыполнения = ОперацииСпецификации.Итог("ВремяВыполнения");
		
		Пока ВремяВыполнения <> 0 Цикл 
			
			СоздатьПроводки(ОперацииСпецификации);
			ВремяВыполнения = ОперацииСпецификации.Итог("ВремяВыполнения");
		КонецЦикла;				
	КонецЦикла;
КонецПроцедуры

Процедура ОсвободитьРанееЗанятыеРесурсы()            
	
	Движения.mega_ПроизводственныеРесурсы.Очистить();
	Движения.mega_ПроизводственныеРесурсы.Записать();	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
		
	Ответственный    = Пользователи.ТекущийПользователь();
	Автор            = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли